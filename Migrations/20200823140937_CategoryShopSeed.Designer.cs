// <auto-generated />
using System;
using CostRegApp2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CostRegApp2.Migrations
{
    [DbContext(typeof(CostRegContext))]
    [Migration("20200823140937_CategoryShopSeed")]
    partial class CategoryShopSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CostRegApp2.Data.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Rezsi"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Lakbér"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Élelmiszer, háztartás"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Ruházat"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Sport"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Hobbi"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Egészség"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Háztartási gépek, karbantartás"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Extra"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Egyéb"
                        });
                });

            modelBuilder.Entity("CostRegApp2.Data.CostPlans", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("CostPlanned")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPlan")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanAdditionalInformation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TypeOfCostPlan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("UserId");

                    b.ToTable("CostPlans");
                });

            modelBuilder.Entity("CostRegApp2.Data.Costs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("AmountOfCost")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfCost")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ShopID");

                    b.HasIndex("UserId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("CostRegApp2.Data.Income", b =>
                {
                    b.Property<int>("IncomeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfIncome")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOFIncome")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncomeAdditionalInformation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TypeOfIncome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IncomeID");

                    b.HasIndex("UserId");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("CostRegApp2.Data.Shops", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShopName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            ShopId = 1,
                            ShopName = "Aldi"
                        },
                        new
                        {
                            ShopId = 2,
                            ShopName = "Auchan"
                        },
                        new
                        {
                            ShopId = 3,
                            ShopName = "Bershka"
                        },
                        new
                        {
                            ShopId = 4,
                            ShopName = "C&A"
                        },
                        new
                        {
                            ShopId = 5,
                            ShopName = "NewYorker"
                        },
                        new
                        {
                            ShopId = 6,
                            ShopName = "Penny Market"
                        },
                        new
                        {
                            ShopId = 7,
                            ShopName = "Lidl"
                        },
                        new
                        {
                            ShopId = 8,
                            ShopName = "MediaMarkt"
                        },
                        new
                        {
                            ShopId = 9,
                            ShopName = "Rossmann"
                        },
                        new
                        {
                            ShopId = 10,
                            ShopName = "Reál"
                        },
                        new
                        {
                            ShopId = 11,
                            ShopName = "Tesco"
                        },
                        new
                        {
                            ShopId = 12,
                            ShopName = "Nem üzlet"
                        });
                });

            modelBuilder.Entity("CostRegApp2.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CostRegApp2.Data.CostPlans", b =>
                {
                    b.HasOne("CostRegApp2.Data.Categories", "Category")
                        .WithMany("CostPlans")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CostRegApp2.Data.User", "User")
                        .WithMany("CostPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CostRegApp2.Data.Costs", b =>
                {
                    b.HasOne("CostRegApp2.Data.Categories", "Category")
                        .WithMany("Costs")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CostRegApp2.Data.Shops", "Shop")
                        .WithMany("Costs")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CostRegApp2.Data.User", "User")
                        .WithMany("Costs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CostRegApp2.Data.Income", b =>
                {
                    b.HasOne("CostRegApp2.Data.User", "User")
                        .WithMany("Income")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
